{"id":"9d752ae09ca5bdce19a1e559d2c0e3fa","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Whitelist.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\n\r\ncontract Whitelist {\r\n    bytes32 public merkleRoot;\r\n\r\n    constructor(bytes32 _markleRoot) {\r\n        merkleRoot = _markleRoot;\r\n    }\r\n\r\n    function checkInWhitelist(\r\n        bytes32[] calldata proof,\r\n        uint64 maxAllowanceToMint\r\n    ) public view returns (bool) {\r\n        bytes32 leaf = keccak256(abi.encode(msg.sender, maxAllowanceToMint));\r\n        bool verified = MerkleProof.verify(proof, merkleRoot, leaf);\r\n        return verified;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The proofs can be generated using the JavaScript library\n * https://github.com/miguelmota/merkletreejs[merkletreejs].\n * Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n *\n * See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n     * consuming from one or the other at each step according to the instructions given by\n     * `proofFlags`.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proof.length - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value for the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            return hashes[totalHashes - 1];\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"143:655:0","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The proofs can be generated using the JavaScript library\n https://github.com/miguelmota/merkletreejs[merkletreejs].\n Note: the hashing algorithm should be keccak256 and pair sorting should be enabled.\n See `test/utils/cryptography/MerkleProof.test.js` for some examples.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501],"name":"MerkleProof","nameLocation":"807:11:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":22,"nodeType":"Block","src":"1280:57:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":16,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1310:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":17,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":15,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1297:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1297:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":19,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1326:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1297:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":14,"id":21,"nodeType":"Return","src":"1290:40:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"825:323:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":23,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1162:6:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"proof","nameLocation":"1195:5:0","nodeType":"VariableDeclaration","scope":23,"src":"1178:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1178:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5,"nodeType":"ArrayTypeName","src":"1178:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"root","nameLocation":"1218:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1210:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"leaf","nameLocation":"1240:4:0","nodeType":"VariableDeclaration","scope":23,"src":"1232:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1232:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:82:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":23,"src":"1274:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12,"name":"bool","nodeType":"ElementaryTypeName","src":"1274:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1273:6:0"},"scope":501,"src":"1153:184:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1575:65:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":37,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1613:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":38,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1620:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":36,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1592:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":40,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1629:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1592:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":35,"id":42,"nodeType":"Return","src":"1585:48:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"1343:90:0","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1447:14:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"proof","nameLocation":"1490:5:0","nodeType":"VariableDeclaration","scope":44,"src":"1471:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1471:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":26,"nodeType":"ArrayTypeName","src":"1471:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"root","nameLocation":"1513:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1505:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1505:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"leaf","nameLocation":"1535:4:0","nodeType":"VariableDeclaration","scope":44,"src":"1527:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1527:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:84:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":44,"src":"1569:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"1569:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1568:6:0"},"scope":501,"src":"1438:202:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":83,"nodeType":"Block","src":"2083:198:0","statements":[{"assignments":[56],"declarations":[{"constant":false,"id":56,"mutability":"mutable","name":"computedHash","nameLocation":"2101:12:0","nodeType":"VariableDeclaration","scope":83,"src":"2093:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2093:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":58,"initialValue":{"id":57,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2093:27:0"},{"body":{"id":79,"nodeType":"Block","src":"2173:73:0","statements":[{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2187:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":72,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2212:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":73,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2226:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":75,"indexExpression":{"id":74,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2232:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2226:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":71,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2202:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2202:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2187:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":78,"nodeType":"ExpressionStatement","src":"2187:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2150:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":64,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2154:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2160:6:0","memberName":"length","nodeType":"MemberAccess","src":"2154:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2150:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":80,"initializationExpression":{"assignments":[60],"declarations":[{"constant":false,"id":60,"mutability":"mutable","name":"i","nameLocation":"2143:1:0","nodeType":"VariableDeclaration","scope":80,"src":"2135:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62,"initialValue":{"hexValue":"30","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2135:13:0"},"loopExpression":{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2168:3:0","subExpression":{"id":67,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2168:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":69,"nodeType":"ExpressionStatement","src":"2168:3:0"},"nodeType":"ForStatement","src":"2130:116:0"},{"expression":{"id":81,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2262:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":54,"id":82,"nodeType":"Return","src":"2255:19:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1646:340:0","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2000:12:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"proof","nameLocation":"2030:5:0","nodeType":"VariableDeclaration","scope":84,"src":"2013:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":46,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":47,"nodeType":"ArrayTypeName","src":"2013:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"leaf","nameLocation":"2045:4:0","nodeType":"VariableDeclaration","scope":84,"src":"2037:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2037:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2012:38:0"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":53,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":84,"src":"2074:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2073:9:0"},"scope":501,"src":"1991:290:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":123,"nodeType":"Block","src":"2490:198:0","statements":[{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"computedHash","nameLocation":"2508:12:0","nodeType":"VariableDeclaration","scope":123,"src":"2500:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2500:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":98,"initialValue":{"id":97,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2523:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2500:27:0"},{"body":{"id":119,"nodeType":"Block","src":"2580:73:0","statements":[{"expression":{"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":110,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2594:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":112,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2619:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":113,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2633:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":115,"indexExpression":{"id":114,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2639:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2633:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":111,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2609:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2609:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2594:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":118,"nodeType":"ExpressionStatement","src":"2594:48:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2557:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":104,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2561:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2567:6:0","memberName":"length","nodeType":"MemberAccess","src":"2561:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2557:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"initializationExpression":{"assignments":[100],"declarations":[{"constant":false,"id":100,"mutability":"mutable","name":"i","nameLocation":"2550:1:0","nodeType":"VariableDeclaration","scope":120,"src":"2542:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"2542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":102,"initialValue":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2554:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2542:13:0"},"loopExpression":{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2575:3:0","subExpression":{"id":107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2575:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":109,"nodeType":"ExpressionStatement","src":"2575:3:0"},"nodeType":"ForStatement","src":"2537:116:0"},{"expression":{"id":121,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"2669:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":94,"id":122,"nodeType":"Return","src":"2662:19:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2287:96:0","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2397:20:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"proof","nameLocation":"2437:5:0","nodeType":"VariableDeclaration","scope":124,"src":"2418:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":86,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2418:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":87,"nodeType":"ArrayTypeName","src":"2418:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"leaf","nameLocation":"2452:4:0","nodeType":"VariableDeclaration","scope":124,"src":"2444:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2444:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2417:40:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"2481:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":92,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:9:0"},"scope":501,"src":"2388:300:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":149,"nodeType":"Block","src":"3116:76:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":142,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3151:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":143,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"3158:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":144,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3170:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":141,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"3133:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":146,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3181:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3133:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":140,"id":148,"nodeType":"Return","src":"3126:59:0"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"2694:235:0","text":" @dev Returns true if the `leaves` can be proved to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n _Available since v4.7._"},"id":150,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2943:16:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"proof","nameLocation":"2986:5:0","nodeType":"VariableDeclaration","scope":150,"src":"2969:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2969:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":127,"nodeType":"ArrayTypeName","src":"2969:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"proofFlags","nameLocation":"3015:10:0","nodeType":"VariableDeclaration","scope":150,"src":"3001:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"3001:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"ArrayTypeName","src":"3001:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"root","nameLocation":"3043:4:0","nodeType":"VariableDeclaration","scope":150,"src":"3035:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3035:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"leaves","nameLocation":"3074:6:0","nodeType":"VariableDeclaration","scope":150,"src":"3057:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3057:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"3057:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2959:127:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"3110:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":138,"name":"bool","nodeType":"ElementaryTypeName","src":"3110:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3109:6:0"},"scope":501,"src":"2934:258:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"3497:84:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":168,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3540:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":169,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"3547:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":170,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3559:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":167,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"3514:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3570:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3514:60:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":166,"id":174,"nodeType":"Return","src":"3507:67:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"3198:100:0","text":" @dev Calldata version of {multiProofVerify}\n _Available since v4.7._"},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3312:24:0","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"proof","nameLocation":"3365:5:0","nodeType":"VariableDeclaration","scope":176,"src":"3346:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3346:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":153,"nodeType":"ArrayTypeName","src":"3346:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"proofFlags","nameLocation":"3396:10:0","nodeType":"VariableDeclaration","scope":176,"src":"3380:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":155,"name":"bool","nodeType":"ElementaryTypeName","src":"3380:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":156,"nodeType":"ArrayTypeName","src":"3380:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"root","nameLocation":"3424:4:0","nodeType":"VariableDeclaration","scope":176,"src":"3416:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"leaves","nameLocation":"3455:6:0","nodeType":"VariableDeclaration","scope":176,"src":"3438:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3438:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":161,"nodeType":"ArrayTypeName","src":"3438:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3336:131:0"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3491:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":164,"name":"bool","nodeType":"ElementaryTypeName","src":"3491:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3490:6:0"},"scope":501,"src":"3303:278:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":320,"nodeType":"Block","src":"4029:1860:0","statements":[{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"leavesLen","nameLocation":"4420:9:0","nodeType":"VariableDeclaration","scope":320,"src":"4412:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":195,"initialValue":{"expression":{"id":193,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4432:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4439:6:0","memberName":"length","nodeType":"MemberAccess","src":"4432:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4412:33:0"},{"assignments":[197],"declarations":[{"constant":false,"id":197,"mutability":"mutable","name":"totalHashes","nameLocation":"4463:11:0","nodeType":"VariableDeclaration","scope":320,"src":"4455:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":200,"initialValue":{"expression":{"id":198,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"4477:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4488:6:0","memberName":"length","nodeType":"MemberAccess","src":"4477:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4455:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":202,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"4546:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":203,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4558:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4564:6:0","memberName":"length","nodeType":"MemberAccess","src":"4558:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4573:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4546:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":208,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"4578:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4546:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4591:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4538:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4538:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"ExpressionStatement","src":"4538:87:0"},{"assignments":[217],"declarations":[{"constant":false,"id":217,"mutability":"mutable","name":"hashes","nameLocation":"4887:6:0","nodeType":"VariableDeclaration","scope":320,"src":"4870:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4870:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":216,"nodeType":"ArrayTypeName","src":"4870:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":223,"initialValue":{"arguments":[{"id":221,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"4910:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4896:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4900:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":219,"nodeType":"ArrayTypeName","src":"4900:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4870:52:0"},{"assignments":[225],"declarations":[{"constant":false,"id":225,"mutability":"mutable","name":"leafPos","nameLocation":"4940:7:0","nodeType":"VariableDeclaration","scope":320,"src":"4932:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"4932:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":227,"initialValue":{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4932:19:0"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"hashPos","nameLocation":"4969:7:0","nodeType":"VariableDeclaration","scope":320,"src":"4961:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":231,"initialValue":{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4979:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4961:19:0"},{"assignments":[233],"declarations":[{"constant":false,"id":233,"mutability":"mutable","name":"proofPos","nameLocation":"4998:8:0","nodeType":"VariableDeclaration","scope":320,"src":"4990:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4990:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":235,"initialValue":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5009:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4990:20:0"},{"body":{"id":293,"nodeType":"Block","src":"5427:258:0","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"a","nameLocation":"5449:1:0","nodeType":"VariableDeclaration","scope":293,"src":"5441:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5441:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":260,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":248,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5453:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":249,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5463:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":255,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"5495:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":258,"indexExpression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5502:9:0","subExpression":{"id":256,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5495:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5453:59:0","trueExpression":{"baseExpression":{"id":251,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5475:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":254,"indexExpression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5482:9:0","subExpression":{"id":252,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5482:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5475:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5441:71:0"},{"assignments":[262],"declarations":[{"constant":false,"id":262,"mutability":"mutable","name":"b","nameLocation":"5534:1:0","nodeType":"VariableDeclaration","scope":293,"src":"5526:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":283,"initialValue":{"condition":{"baseExpression":{"id":263,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"5538:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":265,"indexExpression":{"id":264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5549:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5538:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":278,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5616:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":281,"indexExpression":{"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5622:10:0","subExpression":{"id":279,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"5622:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5616:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5538:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5554:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":267,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5564:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5554:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":273,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"5596:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":276,"indexExpression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5603:9:0","subExpression":{"id":274,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5603:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5554:59:0","trueExpression":{"baseExpression":{"id":269,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5576:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":272,"indexExpression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5583:9:0","subExpression":{"id":270,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5583:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5576:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5526:107:0"},{"expression":{"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":284,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"5647:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":286,"indexExpression":{"id":285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5654:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5647:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5669:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"5672:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":287,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5659:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5647:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":292,"nodeType":"ExpressionStatement","src":"5647:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5405:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":241,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5409:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5405:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"initializationExpression":{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"i","nameLocation":"5398:1:0","nodeType":"VariableDeclaration","scope":294,"src":"5390:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":239,"initialValue":{"hexValue":"30","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5402:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5390:13:0"},"loopExpression":{"expression":{"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5422:3:0","subExpression":{"id":243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5422:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":245,"nodeType":"ExpressionStatement","src":"5422:3:0"},"nodeType":"ForStatement","src":"5385:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5699:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5713:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5699:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5781:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5793:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":317,"nodeType":"Block","src":"5843:40:0","statements":[{"expression":{"baseExpression":{"id":313,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"5864:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":315,"indexExpression":{"hexValue":"30","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5870:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5864:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":316,"nodeType":"Return","src":"5857:15:0"}]},"id":318,"nodeType":"IfStatement","src":"5777:106:0","trueBody":{"id":312,"nodeType":"Block","src":"5796:41:0","statements":[{"expression":{"baseExpression":{"id":308,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"5817:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":310,"indexExpression":{"hexValue":"30","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5824:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5817:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":311,"nodeType":"Return","src":"5810:16:0"}]}},"id":319,"nodeType":"IfStatement","src":"5695:188:0","trueBody":{"id":304,"nodeType":"Block","src":"5716:55:0","statements":[{"expression":{"baseExpression":{"id":298,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"5737:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":302,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":299,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5744:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5744:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":190,"id":303,"nodeType":"Return","src":"5730:30:0"}]}}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"3587:262:0","text":" @dev Returns the root of a tree reconstructed from `leaves` and the sibling nodes in `proof`,\n consuming from one or the other at each step according to the instructions given by\n `proofFlags`.\n _Available since v4.7._"},"id":321,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"3863:17:0","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"proof","nameLocation":"3907:5:0","nodeType":"VariableDeclaration","scope":321,"src":"3890:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3890:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":179,"nodeType":"ArrayTypeName","src":"3890:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":183,"mutability":"mutable","name":"proofFlags","nameLocation":"3936:10:0","nodeType":"VariableDeclaration","scope":321,"src":"3922:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":181,"name":"bool","nodeType":"ElementaryTypeName","src":"3922:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"ArrayTypeName","src":"3922:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"leaves","nameLocation":"3973:6:0","nodeType":"VariableDeclaration","scope":321,"src":"3956:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3956:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":185,"nodeType":"ArrayTypeName","src":"3956:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3880:105:0"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"merkleRoot","nameLocation":"4017:10:0","nodeType":"VariableDeclaration","scope":321,"src":"4009:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4008:20:0"},"scope":501,"src":"3854:2035:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":465,"nodeType":"Block","src":"6188:1860:0","statements":[{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"leavesLen","nameLocation":"6579:9:0","nodeType":"VariableDeclaration","scope":465,"src":"6571:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"6571:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"expression":{"id":338,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6591:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6598:6:0","memberName":"length","nodeType":"MemberAccess","src":"6591:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6571:33:0"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"totalHashes","nameLocation":"6622:11:0","nodeType":"VariableDeclaration","scope":465,"src":"6614:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"6614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":345,"initialValue":{"expression":{"id":343,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"6636:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:6:0","memberName":"length","nodeType":"MemberAccess","src":"6636:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6614:39:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"6705:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":348,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"6717:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6723:6:0","memberName":"length","nodeType":"MemberAccess","src":"6717:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6732:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6705:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":353,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"6737:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6705:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6750:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6697:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:87:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"6697:87:0"},{"assignments":[362],"declarations":[{"constant":false,"id":362,"mutability":"mutable","name":"hashes","nameLocation":"7046:6:0","nodeType":"VariableDeclaration","scope":465,"src":"7029:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7029:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":361,"nodeType":"ArrayTypeName","src":"7029:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":368,"initialValue":{"arguments":[{"id":366,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7069:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7055:13:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7059:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":364,"nodeType":"ArrayTypeName","src":"7059:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7029:52:0"},{"assignments":[370],"declarations":[{"constant":false,"id":370,"mutability":"mutable","name":"leafPos","nameLocation":"7099:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7091:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":372,"initialValue":{"hexValue":"30","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7109:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7091:19:0"},{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"hashPos","nameLocation":"7128:7:0","nodeType":"VariableDeclaration","scope":465,"src":"7120:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"initialValue":{"hexValue":"30","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7120:19:0"},{"assignments":[378],"declarations":[{"constant":false,"id":378,"mutability":"mutable","name":"proofPos","nameLocation":"7157:8:0","nodeType":"VariableDeclaration","scope":465,"src":"7149:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"7149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":380,"initialValue":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7168:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7149:20:0"},{"body":{"id":438,"nodeType":"Block","src":"7586:258:0","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"a","nameLocation":"7608:1:0","nodeType":"VariableDeclaration","scope":438,"src":"7600:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7600:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":405,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7612:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":394,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7622:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7612:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":400,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7654:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":403,"indexExpression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7661:9:0","subExpression":{"id":401,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7654:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7612:59:0","trueExpression":{"baseExpression":{"id":396,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7634:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":399,"indexExpression":{"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7641:9:0","subExpression":{"id":397,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7641:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7634:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7600:71:0"},{"assignments":[407],"declarations":[{"constant":false,"id":407,"mutability":"mutable","name":"b","nameLocation":"7693:1:0","nodeType":"VariableDeclaration","scope":438,"src":"7685:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":406,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7685:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":428,"initialValue":{"condition":{"baseExpression":{"id":408,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7697:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":410,"indexExpression":{"id":409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7708:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7697:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":423,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7775:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":426,"indexExpression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7781:10:0","subExpression":{"id":424,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"7781:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7775:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7697:95:0","trueExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7713:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":412,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7723:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7713:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":418,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7755:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":421,"indexExpression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7762:9:0","subExpression":{"id":419,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7762:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7755:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7713:59:0","trueExpression":{"baseExpression":{"id":414,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7735:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":417,"indexExpression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7742:9:0","subExpression":{"id":415,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7742:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7735:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7685:107:0"},{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":429,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7806:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":431,"indexExpression":{"id":430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7813:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7806:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"7828:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"7831:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":432,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7818:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7818:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7806:27:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":437,"nodeType":"ExpressionStatement","src":"7806:27:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7564:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":386,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7568:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7564:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":439,"initializationExpression":{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"i","nameLocation":"7557:1:0","nodeType":"VariableDeclaration","scope":439,"src":"7549:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":381,"name":"uint256","nodeType":"ElementaryTypeName","src":"7549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":384,"initialValue":{"hexValue":"30","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7561:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7549:13:0"},"loopExpression":{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7581:3:0","subExpression":{"id":388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7581:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":390,"nodeType":"ExpressionStatement","src":"7581:3:0"},"nodeType":"ForStatement","src":"7544:300:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7858:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7872:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7858:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":450,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7940:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7940:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":462,"nodeType":"Block","src":"8002:40:0","statements":[{"expression":{"baseExpression":{"id":458,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8023:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":460,"indexExpression":{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8023:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":461,"nodeType":"Return","src":"8016:15:0"}]},"id":463,"nodeType":"IfStatement","src":"7936:106:0","trueBody":{"id":457,"nodeType":"Block","src":"7955:41:0","statements":[{"expression":{"baseExpression":{"id":453,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7976:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":455,"indexExpression":{"hexValue":"30","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7983:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7976:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":456,"nodeType":"Return","src":"7969:16:0"}]}},"id":464,"nodeType":"IfStatement","src":"7854:188:0","trueBody":{"id":449,"nodeType":"Block","src":"7875:55:0","statements":[{"expression":{"baseExpression":{"id":443,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"7896:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":447,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"7903:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7917:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7903:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7896:23:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":335,"id":448,"nodeType":"Return","src":"7889:30:0"}]}}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"5895:101:0","text":" @dev Calldata version of {processMultiProof}\n _Available since v4.7._"},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6010:25:0","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"proof","nameLocation":"6064:5:0","nodeType":"VariableDeclaration","scope":466,"src":"6045:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6045:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":324,"nodeType":"ArrayTypeName","src":"6045:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"proofFlags","nameLocation":"6095:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6079:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"6079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":327,"nodeType":"ArrayTypeName","src":"6079:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"leaves","nameLocation":"6132:6:0","nodeType":"VariableDeclaration","scope":466,"src":"6115:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6115:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":330,"nodeType":"ArrayTypeName","src":"6115:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6035:109:0"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"merkleRoot","nameLocation":"6176:10:0","nodeType":"VariableDeclaration","scope":466,"src":"6168:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6168:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6167:20:0"},"scope":501,"src":"6001:2047:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":488,"nodeType":"Block","src":"8126:75:0","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8143:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8147:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8143:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8189:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8192:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":482,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8174:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8174:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8143:51:0","trueExpression":{"arguments":[{"id":479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"8166:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"8169:1:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":478,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"8151:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":474,"id":487,"nodeType":"Return","src":"8136:58:0"}]},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"8063:9:0","nodeType":"FunctionDefinition","parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"a","nameLocation":"8081:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8073:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"b","nameLocation":"8092:1:0","nodeType":"VariableDeclaration","scope":489,"src":"8084:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8072:22:0"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"8117:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8116:9:0"},"scope":501,"src":"8054:147:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":499,"nodeType":"Block","src":"8290:178:0","statements":[{"AST":{"nodeType":"YulBlock","src":"8352:110:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8373:4:0","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"8379:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8366:6:0"},"nodeType":"YulFunctionCall","src":"8366:15:0"},"nodeType":"YulExpressionStatement","src":"8366:15:0"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8401:4:0","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"8407:1:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8394:6:0"},"nodeType":"YulFunctionCall","src":"8394:15:0"},"nodeType":"YulExpressionStatement","src":"8394:15:0"},{"nodeType":"YulAssignment","src":"8422:30:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8441:4:0","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"8447:4:0","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8431:9:0"},"nodeType":"YulFunctionCall","src":"8431:21:0"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8422:5:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":491,"isOffset":false,"isSlot":false,"src":"8379:1:0","valueSize":1},{"declaration":493,"isOffset":false,"isSlot":false,"src":"8407:1:0","valueSize":1},{"declaration":496,"isOffset":false,"isSlot":false,"src":"8422:5:0","valueSize":1}],"id":498,"nodeType":"InlineAssembly","src":"8343:119:0"}]},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"8216:14:0","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"a","nameLocation":"8239:1:0","nodeType":"VariableDeclaration","scope":500,"src":"8231:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8231:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"b","nameLocation":"8250:1:0","nodeType":"VariableDeclaration","scope":500,"src":"8242:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8242:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8230:22:0"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8283:5:0","nodeType":"VariableDeclaration","scope":500,"src":"8275:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8275:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8274:15:0"},"scope":501,"src":"8207:261:0","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":502,"src":"799:7671:0","usedErrors":[]}],"src":"118:8353:0"},"id":0},"contracts/Whitelist.sol":{"ast":{"absolutePath":"contracts/Whitelist.sol","exportedSymbols":{"MerkleProof":[501],"Whitelist":[550]},"id":551,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".17"],"nodeType":"PragmaDirective","src":"33:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":551,"sourceUnit":502,"src":"61:68:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Whitelist","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":550,"linearizedBaseContracts":[550],"name":"Whitelist","nameLocation":"142:9:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"2eb4a7ab","id":506,"mutability":"mutable","name":"merkleRoot","nameLocation":"174:10:1","nodeType":"VariableDeclaration","scope":550,"src":"159:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"159:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":515,"nodeType":"Block","src":"226:43:1","statements":[{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":511,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"237:10:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"_markleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"250:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"237:24:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":514,"nodeType":"ExpressionStatement","src":"237:24:1"}]},"id":516,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"_markleRoot","nameLocation":"213:11:1","nodeType":"VariableDeclaration","scope":516,"src":"205:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"204:21:1"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"226:0:1"},"scope":550,"src":"193:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":548,"nodeType":"Block","src":"408:183:1","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"leaf","nameLocation":"427:4:1","nodeType":"VariableDeclaration","scope":548,"src":"419:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"419:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"455:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"459:6:1","memberName":"sender","nodeType":"MemberAccess","src":"455:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"maxAllowanceToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"467:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"444:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"448:6:1","memberName":"encode","nodeType":"MemberAccess","src":"444:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"444:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":528,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"434:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"434:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"419:68:1"},{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"verified","nameLocation":"503:8:1","nodeType":"VariableDeclaration","scope":548,"src":"498:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":537,"name":"bool","nodeType":"ElementaryTypeName","src":"498:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":545,"initialValue":{"arguments":[{"id":541,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"533:5:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":542,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"540:10:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":543,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"552:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":539,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"514:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$501_$","typeString":"type(library MerkleProof)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"526:6:1","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":23,"src":"514:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"514:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"498:59:1"},{"expression":{"id":546,"name":"verified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"575:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":525,"id":547,"nodeType":"Return","src":"568:15:1"}]},"functionSelector":"e10d3be2","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"checkInWhitelist","nameLocation":"286:16:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"proof","nameLocation":"332:5:1","nodeType":"VariableDeclaration","scope":549,"src":"313:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"313:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":518,"nodeType":"ArrayTypeName","src":"313:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"maxAllowanceToMint","nameLocation":"355:18:1","nodeType":"VariableDeclaration","scope":549,"src":"348:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":520,"name":"uint64","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"302:78:1"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"402:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"402:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"401:6:1"},"scope":550,"src":"277:314:1","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":551,"src":"133:461:1","usedErrors":[]}],"src":"33:563:1"},"id":1}},"contracts":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf58333693f9fa3df5760d6614fb88f16b97e48322d311095651f5aa7272af7864736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PC CALLER CALLDATASIZE SWAP4 0xF9 STATICCALL RETURNDATASIZE CREATE2 PUSH23 0xD6614FB88F16B97E48322D311095651F5AA7272AF7864 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"799:7671:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf58333693f9fa3df5760d6614fb88f16b97e48322d311095651f5aa7272af7864736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PC CALLER CALLDATASIZE SWAP4 0xF9 STATICCALL RETURNDATASIZE CREATE2 PUSH23 0xD6614FB88F16B97E48322D311095651F5AA7272AF7864 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"799:7671:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The proofs can be generated using the JavaScript library https://github.com/miguelmota/merkletreejs[merkletreejs]. Note: the hashing algorithm should be keccak256 and pair sorting should be enabled. See `test/utils/cryptography/MerkleProof.test.js` for some examples. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]}},\"version\":1}"}},"contracts/Whitelist.sol":{"Whitelist":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_markleRoot","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"uint64","name":"maxAllowanceToMint","type":"uint64"}],"name":"checkInWhitelist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_516":{"entryPoint":null,"id":516,"parameterSlots":1,"returnSlots":0},"abi_decode_t_bytes32_fromMemory":{"entryPoint":101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":122,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":68,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":63,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":78,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1048:2","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:2","statements":[{"nodeType":"YulAssignment","src":"57:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:2"},"nodeType":"YulFunctionCall","src":"67:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:2","type":""}],"src":"7:75:2"},{"body":{"nodeType":"YulBlock","src":"177:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:2"},"nodeType":"YulFunctionCall","src":"187:12:2"},"nodeType":"YulExpressionStatement","src":"187:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:2"},{"body":{"nodeType":"YulBlock","src":"300:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:2"},"nodeType":"YulFunctionCall","src":"310:12:2"},"nodeType":"YulExpressionStatement","src":"310:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:2"},{"body":{"nodeType":"YulBlock","src":"379:32:2","statements":[{"nodeType":"YulAssignment","src":"389:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:2"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:2","type":""}],"src":"334:77:2"},{"body":{"nodeType":"YulBlock","src":"460:79:2","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:2"},"nodeType":"YulFunctionCall","src":"519:12:2"},"nodeType":"YulExpressionStatement","src":"519:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:2"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:2"},"nodeType":"YulFunctionCall","src":"490:24:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:2"},"nodeType":"YulFunctionCall","src":"480:35:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:2"},"nodeType":"YulFunctionCall","src":"473:43:2"},"nodeType":"YulIf","src":"470:63:2"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:2","type":""}],"src":"417:122:2"},{"body":{"nodeType":"YulBlock","src":"608:80:2","statements":[{"nodeType":"YulAssignment","src":"618:22:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:2"},"nodeType":"YulFunctionCall","src":"627:13:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:2"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"649:26:2"},"nodeType":"YulFunctionCall","src":"649:33:2"},"nodeType":"YulExpressionStatement","src":"649:33:2"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:2","type":""}],"src":"545:143:2"},{"body":{"nodeType":"YulBlock","src":"771:274:2","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:2"},"nodeType":"YulFunctionCall","src":"819:79:2"},"nodeType":"YulExpressionStatement","src":"819:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:2"},"nodeType":"YulFunctionCall","src":"788:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:2","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:2"},"nodeType":"YulFunctionCall","src":"784:32:2"},"nodeType":"YulIf","src":"781:119:2"},{"nodeType":"YulBlock","src":"910:128:2","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:2","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:2","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:2","type":""}]},{"nodeType":"YulAssignment","src":"954:74:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:2"},"nodeType":"YulFunctionCall","src":"996:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:2"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"964:31:2"},"nodeType":"YulFunctionCall","src":"964:64:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:2"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:2","type":""}],"src":"694:351:2"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516105583803806105588339818101604052810190610032919061007a565b80600081905550506100a7565b600080fd5b6000819050919050565b61005781610044565b811461006257600080fd5b50565b6000815190506100748161004e565b92915050565b6000602082840312156100905761008f61003f565b5b600061009e84828501610065565b91505092915050565b6104a2806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632eb4a7ab1461003b578063e10d3be214610059575b600080fd5b610043610089565b60405161005091906101e3565b60405180910390f35b610073600480360381019061006e91906102ad565b61008f565b6040516100809190610328565b60405180910390f35b60005481565b60008033836040516020016100a5929190610393565b604051602081830303815290604052805190602001209050600061010d868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506000548461011b565b905080925050509392505050565b6000826101288584610132565b1490509392505050565b60008082905060005b845181101561017d576101688286838151811061015b5761015a6103bc565b5b6020026020010151610188565b9150808061017590610424565b91505061013b565b508091505092915050565b60008183106101a05761019b82846101b3565b6101ab565b6101aa83836101b3565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b6101dd816101ca565b82525050565b60006020820190506101f860008301846101d4565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261022d5761022c610208565b5b8235905067ffffffffffffffff81111561024a5761024961020d565b5b60208301915083602082028301111561026657610265610212565b5b9250929050565b600067ffffffffffffffff82169050919050565b61028a8161026d565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b6000806000604084860312156102c6576102c56101fe565b5b600084013567ffffffffffffffff8111156102e4576102e3610203565b5b6102f086828701610217565b9350935050602061030386828701610298565b9150509250925092565b60008115159050919050565b6103228161030d565b82525050565b600060208201905061033d6000830184610319565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061036e82610343565b9050919050565b61037e81610363565b82525050565b61038d8161026d565b82525050565b60006040820190506103a86000830185610375565b6103b56020830184610384565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061042f8261041a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610461576104606103eb565b5b60018201905091905056fea26469706673582212209314bd4d31fd633f9c06def1a12e623553adb036b1a18135f509823cd16d93f764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x558 CODESIZE SUB DUP1 PUSH2 0x558 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57 DUP2 PUSH2 0x44 JUMP JUMPDEST DUP2 EQ PUSH2 0x62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x74 DUP2 PUSH2 0x4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x90 JUMPI PUSH2 0x8F PUSH2 0x3F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9E DUP5 DUP3 DUP6 ADD PUSH2 0x65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A2 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE10D3BE2 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x10D DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x128 DUP6 DUP5 PUSH2 0x132 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x17D JUMPI PUSH2 0x168 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0x3BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x188 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x175 SWAP1 PUSH2 0x424 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1A0 JUMPI PUSH2 0x19B DUP3 DUP5 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x1AA DUP4 DUP4 PUSH2 0x1B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x208 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0x20D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x212 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A DUP2 PUSH2 0x26D JUMP JUMPDEST DUP2 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A7 DUP2 PUSH2 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x2E3 PUSH2 0x203 JUMP JUMPDEST JUMPDEST PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x303 DUP7 DUP3 DUP8 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x322 DUP2 PUSH2 0x30D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x319 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP3 PUSH2 0x343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x363 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x26D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x3B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP3 PUSH2 0x41A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x3EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EQ 0xBD 0x4D BALANCE REVERT PUSH4 0x3F9C06DE CALL LOG1 0x2E PUSH3 0x3553AD 0xB0 CALLDATASIZE 0xB1 LOG1 DUP2 CALLDATALOAD CREATE2 MULMOD DUP3 EXTCODECOPY 0xD1 PUSH14 0x93F764736F6C6343000811003300 ","sourceMap":"133:461:1:-:0;;;193:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;250:11;237:10;:24;;;;193:76;133:461;;88:117:2;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;133:461:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_efficientHash_500":{"entryPoint":435,"id":500,"parameterSlots":2,"returnSlots":1},"@_hashPair_489":{"entryPoint":392,"id":489,"parameterSlots":2,"returnSlots":1},"@checkInWhitelist_549":{"entryPoint":143,"id":549,"parameterSlots":3,"returnSlots":1},"@merkleRoot_506":{"entryPoint":137,"id":506,"parameterSlots":0,"returnSlots":0},"@processProof_84":{"entryPoint":306,"id":84,"parameterSlots":2,"returnSlots":1},"@verify_23":{"entryPoint":283,"id":23,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":535,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint64":{"entryPoint":664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint64":{"entryPoint":685,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":885,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":793,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":468,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":900,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint64__to_t_address_t_uint64__fromStack_reversed":{"entryPoint":915,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":483,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":781,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":458,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":835,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1050,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":621,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1060,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1003,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":956,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":525,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":520,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":530,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":515,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":510,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":641,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4744:2","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:2","statements":[{"nodeType":"YulAssignment","src":"62:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:2"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:2","type":""}],"src":"7:77:2"},{"body":{"nodeType":"YulBlock","src":"155:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:2"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"177:17:2"},"nodeType":"YulFunctionCall","src":"177:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:2"},"nodeType":"YulFunctionCall","src":"165:37:2"},"nodeType":"YulExpressionStatement","src":"165:37:2"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:2","type":""}],"src":"90:118:2"},{"body":{"nodeType":"YulBlock","src":"312:124:2","statements":[{"nodeType":"YulAssignment","src":"322:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:2"},"nodeType":"YulFunctionCall","src":"330:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:2"},"nodeType":"YulFunctionCall","src":"411:17:2"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"358:43:2"},"nodeType":"YulFunctionCall","src":"358:71:2"},"nodeType":"YulExpressionStatement","src":"358:71:2"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:2","type":""}],"src":"214:222:2"},{"body":{"nodeType":"YulBlock","src":"482:35:2","statements":[{"nodeType":"YulAssignment","src":"492:19:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:2","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:2"},"nodeType":"YulFunctionCall","src":"502:9:2"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:2"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:2","type":""}],"src":"442:75:2"},{"body":{"nodeType":"YulBlock","src":"612:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:2"},"nodeType":"YulFunctionCall","src":"622:12:2"},"nodeType":"YulExpressionStatement","src":"622:12:2"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:2"},{"body":{"nodeType":"YulBlock","src":"735:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:2"},"nodeType":"YulFunctionCall","src":"745:12:2"},"nodeType":"YulExpressionStatement","src":"745:12:2"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:2"},{"body":{"nodeType":"YulBlock","src":"858:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"875:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"878:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"868:6:2"},"nodeType":"YulFunctionCall","src":"868:12:2"},"nodeType":"YulExpressionStatement","src":"868:12:2"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"769:117:2"},{"body":{"nodeType":"YulBlock","src":"981:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"998:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1001:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"991:6:2"},"nodeType":"YulFunctionCall","src":"991:12:2"},"nodeType":"YulExpressionStatement","src":"991:12:2"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"892:117:2"},{"body":{"nodeType":"YulBlock","src":"1104:28:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1121:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1124:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1114:6:2"},"nodeType":"YulFunctionCall","src":"1114:12:2"},"nodeType":"YulExpressionStatement","src":"1114:12:2"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1015:117:2"},{"body":{"nodeType":"YulBlock","src":"1245:478:2","statements":[{"body":{"nodeType":"YulBlock","src":"1294:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1296:77:2"},"nodeType":"YulFunctionCall","src":"1296:79:2"},"nodeType":"YulExpressionStatement","src":"1296:79:2"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1273:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1281:4:2","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1269:3:2"},"nodeType":"YulFunctionCall","src":"1269:17:2"},{"name":"end","nodeType":"YulIdentifier","src":"1288:3:2"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1265:3:2"},"nodeType":"YulFunctionCall","src":"1265:27:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1258:6:2"},"nodeType":"YulFunctionCall","src":"1258:35:2"},"nodeType":"YulIf","src":"1255:122:2"},{"nodeType":"YulAssignment","src":"1386:30:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1409:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1396:12:2"},"nodeType":"YulFunctionCall","src":"1396:20:2"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1386:6:2"}]},{"body":{"nodeType":"YulBlock","src":"1459:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1461:77:2"},"nodeType":"YulFunctionCall","src":"1461:79:2"},"nodeType":"YulExpressionStatement","src":"1461:79:2"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1431:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1439:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1428:2:2"},"nodeType":"YulFunctionCall","src":"1428:30:2"},"nodeType":"YulIf","src":"1425:117:2"},{"nodeType":"YulAssignment","src":"1551:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1567:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1575:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1563:3:2"},"nodeType":"YulFunctionCall","src":"1563:17:2"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1551:8:2"}]},{"body":{"nodeType":"YulBlock","src":"1634:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1636:77:2"},"nodeType":"YulFunctionCall","src":"1636:79:2"},"nodeType":"YulExpressionStatement","src":"1636:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1599:8:2"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1613:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"1621:4:2","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1609:3:2"},"nodeType":"YulFunctionCall","src":"1609:17:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:2"},"nodeType":"YulFunctionCall","src":"1595:32:2"},{"name":"end","nodeType":"YulIdentifier","src":"1629:3:2"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1592:2:2"},"nodeType":"YulFunctionCall","src":"1592:41:2"},"nodeType":"YulIf","src":"1589:128:2"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1212:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1220:3:2","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1228:8:2","type":""},{"name":"length","nodeType":"YulTypedName","src":"1238:6:2","type":""}],"src":"1155:568:2"},{"body":{"nodeType":"YulBlock","src":"1773:57:2","statements":[{"nodeType":"YulAssignment","src":"1783:41:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1798:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"1805:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1794:3:2"},"nodeType":"YulFunctionCall","src":"1794:30:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1783:7:2"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1755:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1765:7:2","type":""}],"src":"1729:101:2"},{"body":{"nodeType":"YulBlock","src":"1878:78:2","statements":[{"body":{"nodeType":"YulBlock","src":"1934:16:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1946:1:2","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:2"},"nodeType":"YulFunctionCall","src":"1936:12:2"},"nodeType":"YulExpressionStatement","src":"1936:12:2"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1901:5:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1925:5:2"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1908:16:2"},"nodeType":"YulFunctionCall","src":"1908:23:2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1898:2:2"},"nodeType":"YulFunctionCall","src":"1898:34:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1891:6:2"},"nodeType":"YulFunctionCall","src":"1891:42:2"},"nodeType":"YulIf","src":"1888:62:2"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1871:5:2","type":""}],"src":"1836:120:2"},{"body":{"nodeType":"YulBlock","src":"2013:86:2","statements":[{"nodeType":"YulAssignment","src":"2023:29:2","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2045:6:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2032:12:2"},"nodeType":"YulFunctionCall","src":"2032:20:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2023:5:2"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2087:5:2"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2061:25:2"},"nodeType":"YulFunctionCall","src":"2061:32:2"},"nodeType":"YulExpressionStatement","src":"2061:32:2"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1991:6:2","type":""},{"name":"end","nodeType":"YulTypedName","src":"1999:3:2","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2007:5:2","type":""}],"src":"1962:137:2"},{"body":{"nodeType":"YulBlock","src":"2222:585:2","statements":[{"body":{"nodeType":"YulBlock","src":"2268:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2270:77:2"},"nodeType":"YulFunctionCall","src":"2270:79:2"},"nodeType":"YulExpressionStatement","src":"2270:79:2"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2243:7:2"},{"name":"headStart","nodeType":"YulIdentifier","src":"2252:9:2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2239:3:2"},"nodeType":"YulFunctionCall","src":"2239:23:2"},{"kind":"number","nodeType":"YulLiteral","src":"2264:2:2","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2235:3:2"},"nodeType":"YulFunctionCall","src":"2235:32:2"},"nodeType":"YulIf","src":"2232:119:2"},{"nodeType":"YulBlock","src":"2361:312:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2376:45:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2407:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"2418:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:2"},"nodeType":"YulFunctionCall","src":"2403:17:2"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2390:12:2"},"nodeType":"YulFunctionCall","src":"2390:31:2"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2380:6:2","type":""}]},{"body":{"nodeType":"YulBlock","src":"2468:83:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2470:77:2"},"nodeType":"YulFunctionCall","src":"2470:79:2"},"nodeType":"YulExpressionStatement","src":"2470:79:2"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2440:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"2448:18:2","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2437:2:2"},"nodeType":"YulFunctionCall","src":"2437:30:2"},"nodeType":"YulIf","src":"2434:117:2"},{"nodeType":"YulAssignment","src":"2565:98:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2635:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"2646:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2631:3:2"},"nodeType":"YulFunctionCall","src":"2631:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2655:7:2"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulIdentifier","src":"2583:47:2"},"nodeType":"YulFunctionCall","src":"2583:80:2"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2565:6:2"},{"name":"value1","nodeType":"YulIdentifier","src":"2573:6:2"}]}]},{"nodeType":"YulBlock","src":"2683:117:2","statements":[{"nodeType":"YulVariableDeclaration","src":"2698:16:2","value":{"kind":"number","nodeType":"YulLiteral","src":"2712:2:2","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2702:6:2","type":""}]},{"nodeType":"YulAssignment","src":"2728:62:2","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2762:9:2"},{"name":"offset","nodeType":"YulIdentifier","src":"2773:6:2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2758:3:2"},"nodeType":"YulFunctionCall","src":"2758:22:2"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2782:7:2"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"2738:19:2"},"nodeType":"YulFunctionCall","src":"2738:52:2"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2728:6:2"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2176:9:2","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2187:7:2","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2199:6:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2207:6:2","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2215:6:2","type":""}],"src":"2105:702:2"},{"body":{"nodeType":"YulBlock","src":"2855:48:2","statements":[{"nodeType":"YulAssignment","src":"2865:32:2","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2890:5:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2883:6:2"},"nodeType":"YulFunctionCall","src":"2883:13:2"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2876:6:2"},"nodeType":"YulFunctionCall","src":"2876:21:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2865:7:2"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2837:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2847:7:2","type":""}],"src":"2813:90:2"},{"body":{"nodeType":"YulBlock","src":"2968:50:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2985:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3005:5:2"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2990:14:2"},"nodeType":"YulFunctionCall","src":"2990:21:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2978:6:2"},"nodeType":"YulFunctionCall","src":"2978:34:2"},"nodeType":"YulExpressionStatement","src":"2978:34:2"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2956:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2963:3:2","type":""}],"src":"2909:109:2"},{"body":{"nodeType":"YulBlock","src":"3116:118:2","statements":[{"nodeType":"YulAssignment","src":"3126:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3138:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3149:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3134:3:2"},"nodeType":"YulFunctionCall","src":"3134:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3126:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3200:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3213:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3224:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3209:3:2"},"nodeType":"YulFunctionCall","src":"3209:17:2"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3162:37:2"},"nodeType":"YulFunctionCall","src":"3162:65:2"},"nodeType":"YulExpressionStatement","src":"3162:65:2"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3088:9:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3100:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3111:4:2","type":""}],"src":"3024:210:2"},{"body":{"nodeType":"YulBlock","src":"3285:81:2","statements":[{"nodeType":"YulAssignment","src":"3295:65:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3310:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"3317:42:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3306:3:2"},"nodeType":"YulFunctionCall","src":"3306:54:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3295:7:2"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3267:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3277:7:2","type":""}],"src":"3240:126:2"},{"body":{"nodeType":"YulBlock","src":"3417:51:2","statements":[{"nodeType":"YulAssignment","src":"3427:35:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3456:5:2"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3438:17:2"},"nodeType":"YulFunctionCall","src":"3438:24:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3427:7:2"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3399:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3409:7:2","type":""}],"src":"3372:96:2"},{"body":{"nodeType":"YulBlock","src":"3539:53:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3556:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3579:5:2"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3561:17:2"},"nodeType":"YulFunctionCall","src":"3561:24:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3549:6:2"},"nodeType":"YulFunctionCall","src":"3549:37:2"},"nodeType":"YulExpressionStatement","src":"3549:37:2"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3527:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3534:3:2","type":""}],"src":"3474:118:2"},{"body":{"nodeType":"YulBlock","src":"3661:52:2","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3678:3:2"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3700:5:2"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3683:16:2"},"nodeType":"YulFunctionCall","src":"3683:23:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3671:6:2"},"nodeType":"YulFunctionCall","src":"3671:36:2"},"nodeType":"YulExpressionStatement","src":"3671:36:2"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3649:5:2","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3656:3:2","type":""}],"src":"3598:115:2"},{"body":{"nodeType":"YulBlock","src":"3843:204:2","statements":[{"nodeType":"YulAssignment","src":"3853:26:2","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3865:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3876:2:2","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3861:3:2"},"nodeType":"YulFunctionCall","src":"3861:18:2"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3853:4:2"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3933:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3946:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"3957:1:2","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3942:3:2"},"nodeType":"YulFunctionCall","src":"3942:17:2"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3889:43:2"},"nodeType":"YulFunctionCall","src":"3889:71:2"},"nodeType":"YulExpressionStatement","src":"3889:71:2"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4012:6:2"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4025:9:2"},{"kind":"number","nodeType":"YulLiteral","src":"4036:2:2","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:2"},"nodeType":"YulFunctionCall","src":"4021:18:2"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"3970:41:2"},"nodeType":"YulFunctionCall","src":"3970:70:2"},"nodeType":"YulExpressionStatement","src":"3970:70:2"}]},"name":"abi_encode_tuple_t_address_t_uint64__to_t_address_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3807:9:2","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3819:6:2","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3827:6:2","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3838:4:2","type":""}],"src":"3719:328:2"},{"body":{"nodeType":"YulBlock","src":"4081:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4098:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4101:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4091:6:2"},"nodeType":"YulFunctionCall","src":"4091:88:2"},"nodeType":"YulExpressionStatement","src":"4091:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4195:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4198:4:2","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4188:6:2"},"nodeType":"YulFunctionCall","src":"4188:15:2"},"nodeType":"YulExpressionStatement","src":"4188:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4219:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4222:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4212:6:2"},"nodeType":"YulFunctionCall","src":"4212:15:2"},"nodeType":"YulExpressionStatement","src":"4212:15:2"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4053:180:2"},{"body":{"nodeType":"YulBlock","src":"4267:152:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4284:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4287:77:2","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4277:6:2"},"nodeType":"YulFunctionCall","src":"4277:88:2"},"nodeType":"YulExpressionStatement","src":"4277:88:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4381:1:2","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4384:4:2","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4374:6:2"},"nodeType":"YulFunctionCall","src":"4374:15:2"},"nodeType":"YulExpressionStatement","src":"4374:15:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4405:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4408:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4398:6:2"},"nodeType":"YulFunctionCall","src":"4398:15:2"},"nodeType":"YulExpressionStatement","src":"4398:15:2"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4239:180:2"},{"body":{"nodeType":"YulBlock","src":"4470:32:2","statements":[{"nodeType":"YulAssignment","src":"4480:16:2","value":{"name":"value","nodeType":"YulIdentifier","src":"4491:5:2"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4480:7:2"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4452:5:2","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4462:7:2","type":""}],"src":"4425:77:2"},{"body":{"nodeType":"YulBlock","src":"4551:190:2","statements":[{"nodeType":"YulAssignment","src":"4561:33:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4588:5:2"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4570:17:2"},"nodeType":"YulFunctionCall","src":"4570:24:2"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4561:5:2"}]},{"body":{"nodeType":"YulBlock","src":"4684:22:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4686:16:2"},"nodeType":"YulFunctionCall","src":"4686:18:2"},"nodeType":"YulExpressionStatement","src":"4686:18:2"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4609:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4616:66:2","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4606:2:2"},"nodeType":"YulFunctionCall","src":"4606:77:2"},"nodeType":"YulIf","src":"4603:103:2"},{"nodeType":"YulAssignment","src":"4715:20:2","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4726:5:2"},{"kind":"number","nodeType":"YulLiteral","src":"4733:1:2","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:2"},"nodeType":"YulFunctionCall","src":"4722:13:2"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4715:3:2"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4537:5:2","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4547:3:2","type":""}],"src":"4508:233:2"}]},"contents":"{\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptrt_uint64(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint64__to_t_address_t_uint64__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":2,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80632eb4a7ab1461003b578063e10d3be214610059575b600080fd5b610043610089565b60405161005091906101e3565b60405180910390f35b610073600480360381019061006e91906102ad565b61008f565b6040516100809190610328565b60405180910390f35b60005481565b60008033836040516020016100a5929190610393565b604051602081830303815290604052805190602001209050600061010d868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506000548461011b565b905080925050509392505050565b6000826101288584610132565b1490509392505050565b60008082905060005b845181101561017d576101688286838151811061015b5761015a6103bc565b5b6020026020010151610188565b9150808061017590610424565b91505061013b565b508091505092915050565b60008183106101a05761019b82846101b3565b6101ab565b6101aa83836101b3565b5b905092915050565b600082600052816020526040600020905092915050565b6000819050919050565b6101dd816101ca565b82525050565b60006020820190506101f860008301846101d4565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261022d5761022c610208565b5b8235905067ffffffffffffffff81111561024a5761024961020d565b5b60208301915083602082028301111561026657610265610212565b5b9250929050565b600067ffffffffffffffff82169050919050565b61028a8161026d565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b6000806000604084860312156102c6576102c56101fe565b5b600084013567ffffffffffffffff8111156102e4576102e3610203565b5b6102f086828701610217565b9350935050602061030386828701610298565b9150509250925092565b60008115159050919050565b6103228161030d565b82525050565b600060208201905061033d6000830184610319565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061036e82610343565b9050919050565b61037e81610363565b82525050565b61038d8161026d565b82525050565b60006040820190506103a86000830185610375565b6103b56020830184610384565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061042f8261041a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610461576104606103eb565b5b60018201905091905056fea26469706673582212209314bd4d31fd633f9c06def1a12e623553adb036b1a18135f509823cd16d93f764736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE10D3BE2 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x10D DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x0 SLOAD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x128 DUP6 DUP5 PUSH2 0x132 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x17D JUMPI PUSH2 0x168 DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0x3BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x188 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x175 SWAP1 PUSH2 0x424 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1A0 JUMPI PUSH2 0x19B DUP3 DUP5 PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST PUSH2 0x1AA DUP4 DUP4 PUSH2 0x1B3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x208 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0x20D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x212 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28A DUP2 PUSH2 0x26D JUMP JUMPDEST DUP2 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A7 DUP2 PUSH2 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x1FE JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH2 0x2E3 PUSH2 0x203 JUMP JUMPDEST JUMPDEST PUSH2 0x2F0 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x303 DUP7 DUP3 DUP8 ADD PUSH2 0x298 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x322 DUP2 PUSH2 0x30D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x319 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36E DUP3 PUSH2 0x343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x363 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x26D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x375 JUMP JUMPDEST PUSH2 0x3B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP3 PUSH2 0x41A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x3EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 EQ 0xBD 0x4D BALANCE REVERT PUSH4 0x3F9C06DE CALL LOG1 0x2E PUSH3 0x3553AD 0xB0 CALLDATASIZE 0xB1 LOG1 DUP2 CALLDATALOAD CREATE2 MULMOD DUP3 EXTCODECOPY 0xD1 PUSH14 0x93F764736F6C6343000811003300 ","sourceMap":"133:461:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;159:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;277:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;159:25;;;;:::o;277:314::-;402:4;419:12;455:10;467:18;444:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;434:53;;;;;;419:68;;498:13;514:43;533:5;;514:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:10;;552:4;514:18;:43::i;:::-;498:59;;575:8;568:15;;;;277:314;;;;;:::o;1153:184:0:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;1290:40;;1153:184;;;;;:::o;1991:290::-;2074:7;2093:20;2116:4;2093:27;;2135:9;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;;2202:9;:33::i;:::-;2187:48;;2168:3;;;;;:::i;:::-;;;;2130:116;;;;2262:12;2255:19;;;1991:290;;;;:::o;8054:147::-;8117:7;8147:1;8143;:5;:51;;8174:20;8189:1;8192;8174:14;:20::i;:::-;8143:51;;;8151:20;8166:1;8169;8151:14;:20::i;:::-;8143:51;8136:58;;8054:147;;;;:::o;8207:261::-;8275:13;8379:1;8373:4;8366:15;8407:1;8401:4;8394:15;8447:4;8441;8431:21;8422:30;;8207:261;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:117;878:1;875;868:12;892:117;1001:1;998;991:12;1015:117;1124:1;1121;1114:12;1155:568;1228:8;1238:6;1288:3;1281:4;1273:6;1269:17;1265:27;1255:122;;1296:79;;:::i;:::-;1255:122;1409:6;1396:20;1386:30;;1439:18;1431:6;1428:30;1425:117;;;1461:79;;:::i;:::-;1425:117;1575:4;1567:6;1563:17;1551:29;;1629:3;1621:4;1613:6;1609:17;1599:8;1595:32;1592:41;1589:128;;;1636:79;;:::i;:::-;1589:128;1155:568;;;;;:::o;1729:101::-;1765:7;1805:18;1798:5;1794:30;1783:41;;1729:101;;;:::o;1836:120::-;1908:23;1925:5;1908:23;:::i;:::-;1901:5;1898:34;1888:62;;1946:1;1943;1936:12;1888:62;1836:120;:::o;1962:137::-;2007:5;2045:6;2032:20;2023:29;;2061:32;2087:5;2061:32;:::i;:::-;1962:137;;;;:::o;2105:702::-;2199:6;2207;2215;2264:2;2252:9;2243:7;2239:23;2235:32;2232:119;;;2270:79;;:::i;:::-;2232:119;2418:1;2407:9;2403:17;2390:31;2448:18;2440:6;2437:30;2434:117;;;2470:79;;:::i;:::-;2434:117;2583:80;2655:7;2646:6;2635:9;2631:22;2583:80;:::i;:::-;2565:98;;;;2361:312;2712:2;2738:52;2782:7;2773:6;2762:9;2758:22;2738:52;:::i;:::-;2728:62;;2683:117;2105:702;;;;;:::o;2813:90::-;2847:7;2890:5;2883:13;2876:21;2865:32;;2813:90;;;:::o;2909:109::-;2990:21;3005:5;2990:21;:::i;:::-;2985:3;2978:34;2909:109;;:::o;3024:210::-;3111:4;3149:2;3138:9;3134:18;3126:26;;3162:65;3224:1;3213:9;3209:17;3200:6;3162:65;:::i;:::-;3024:210;;;;:::o;3240:126::-;3277:7;3317:42;3310:5;3306:54;3295:65;;3240:126;;;:::o;3372:96::-;3409:7;3438:24;3456:5;3438:24;:::i;:::-;3427:35;;3372:96;;;:::o;3474:118::-;3561:24;3579:5;3561:24;:::i;:::-;3556:3;3549:37;3474:118;;:::o;3598:115::-;3683:23;3700:5;3683:23;:::i;:::-;3678:3;3671:36;3598:115;;:::o;3719:328::-;3838:4;3876:2;3865:9;3861:18;3853:26;;3889:71;3957:1;3946:9;3942:17;3933:6;3889:71;:::i;:::-;3970:70;4036:2;4025:9;4021:18;4012:6;3970:70;:::i;:::-;3719:328;;;;;:::o;4053:180::-;4101:77;4098:1;4091:88;4198:4;4195:1;4188:15;4222:4;4219:1;4212:15;4239:180;4287:77;4284:1;4277:88;4384:4;4381:1;4374:15;4408:4;4405:1;4398:15;4425:77;4462:7;4491:5;4480:16;;4425:77;;;:::o;4508:233::-;4547:3;4570:24;4588:5;4570:24;:::i;:::-;4561:33;;4616:66;4609:5;4606:77;4603:103;;4686:18;;:::i;:::-;4603:103;4733:1;4726:5;4722:13;4715:20;;4508:233;;;:::o"},"methodIdentifiers":{"checkInWhitelist(bytes32[],uint64)":"e10d3be2","merkleRoot()":"2eb4a7ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_markleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowanceToMint\",\"type\":\"uint64\"}],\"name\":\"checkInWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"contracts/Whitelist.sol\":{\"keccak256\":\"0xfb9be23a8ab437e605b37f885b465f5fdc608b4d70d803327251a05c34a17a52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0145fc6198f0e15d721f24c2dec9425e194c840896b1cb3c9e7fb01e9c219df\",\"dweb:/ipfs/Qma7XpNBxkVSqU3PWprxdkyTmF8u85gojdGbSkf8iZt61L\"]}},\"version\":1}"}}}}}